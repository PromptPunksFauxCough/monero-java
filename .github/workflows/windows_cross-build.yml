name: Windows Cross-Compile (MSYS2)

on:
  push:
    branches:
      - '**'
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 60

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zeromq
            mingw-w64-x86_64-libsodium
            mingw-w64-x86_64-hidapi
            mingw-w64-x86_64-unbound
            mingw-w64-x86_64-protobuf
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-readline
            git
            make
            curl
            unzip
            base-devel

      - name: Build Boost
        run: |
          curl -LO https://archives.boost.io/release/1.74.0/source/boost_1_74_0.zip
          unzip boost_1_74_0.zip
          cd boost_1_74_0
          ./bootstrap.sh --prefix=/mingw64 --with-toolset=gcc
          ./b2 --with-chrono --with-date_time --with-filesystem --with-program_options \
               --with-regex --with-serialization --with-system --with-thread \
               --with-locale toolset=gcc link=static threading=multi address-model=64 \
               --prefix=/mingw64 install

      - name: CMake Configure
        run: |
          cmake -G "MinGW Makefiles" -B build -DCMAKE_BUILD_TYPE=Release \
            -DBOOST_ROOT=/mingw64 \
            -DOPENSSL_ROOT_DIR=/mingw64 \
            -DZeroMQ_ROOT_DIR=/mingw64 \
            -DLIBSODIUM_ROOT_DIR=/mingw64 \
            -DLIBUSB_ROOT_DIR=/mingw64

      - name: CMake Build
        run: cmake --build build --config Release --parallel 4

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: build/bin/
