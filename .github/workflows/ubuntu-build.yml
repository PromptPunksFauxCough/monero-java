name: Ubuntu x86_64 (Static)

on:
  push:
    branches:
      - static

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Use CMake 3.24
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: "3.24.0"

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: "liberica"
        java-version: "21"

    - name: Install dependencies via apt-get
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libboost-all-dev libssl-dev libzmq3-dev libsodium-dev unbound libunbound-dev liblzma-dev libreadline-dev libexpat1-dev qttools5-dev libhidapi-dev libusb-1.0-0-dev libprotobuf-dev doxygen graphviz libtool gperf libevent-dev pkg-config ccache

#    - name: Configure and build (with debug flags)
#      if: steps.cache-cmake.outputs.cache-hit != 'true'
#      run: |
#        mkdir -p build-ubuntu
#        cd build-ubuntu
#        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC=ON -DCMAKE_FIND_DEBUG_MODE=ON --trace-expand
#        cmake --build . --parallel 1
#      env:
#        ACTIONS_STEP_DEBUG: true

    - name: Configure and build
      run: |
        mkdir -p build-ubuntu
        cd build-ubuntu
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC=ON
        cmake --build . --parallel 4

    - name: Prepare and package release artifacts
      run: |
        mkdir -p dist/ubuntu-22.04
        cp build-ubuntu/libmonero-java.so       dist/ubuntu-22.04/
        if [ -f external/monero-cpp/build/libmonero-cpp.so ]; then
          cp external/monero-cpp/build/libmonero-cpp.so dist/ubuntu-22.04/
        fi
        zip  -r dist/monero-java_ubuntu.zip       dist/ubuntu-22.04/
        tar  -czvf dist/monero-java_ubuntu.tar.gz  -C dist/ubuntu-22.04 .

    - name: Generate release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: run-${{ github.run_id }}
        name: CI Build ${{ github.run_id }}
        draft: false
        prerelease: true
        files: |
          dist/*.zip
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
